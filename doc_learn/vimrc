" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
"set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available

set nocompatible
"打开语法高亮
syntax on
"在底部显示当前模式 
set showmode 
"命令模式下显示键入的指令
set showcmd
"支持使用鼠标
set mouse=a
"使用utf-8编码
set encoding=utf-8
"启用256色
set t_Co=256
"开启文件类型检查，并且载入与该类型对应的缩进规则(如.py 文件会去找~/.vim/indent/python.vim)
filetype indent on

"下一行的缩进更上一行保持一致
set autoindent
"按下Tab会显示vim的空格数
set tabstop=2
"文本上按下>>(增加一级缩进) <<(取消一级缩进) ==(取消全部缩进)
set expandtab
"Tab 转为多少空格
set softtabstop=2
"显示行号
set number
"显示光标所在行的行号，其它行都为相对改行的行号
"set relativenumber
"光标所在的当前行高亮
set cursorline
"设置行宽
set textwidth=80
"自动拆行,关闭用set nowtap 
set wrap
"遇到指定符号(如空格)才拆行
set linebreak
"指定拆行与编辑窗口右边缘之间空出的字符数
set wrapmargin=2
"垂直滚动时，光标距离顶部或者底部的位置
set scrolloff=15
"水平滚动时，光标距离行首或行尾的位置(不拆行时有用)
set sidescrolloff=5
"是否显示状态栏。0 表示不显示，1 表示只在多窗口时显示，2 表示显示
set laststatus=2
"在状态栏显示光标的当前位置（位于哪一行哪一列）
set ruler
"光标遇到圆括号、方括号、大括号时，自动高亮对应的另一个圆括号、方括号和大括号
set showmatch
"搜索时，高亮显示匹配结果
set hlsearch
"输入搜索模式时，每输入一个字符，就自动跳到第一个匹配的结果
set incsearch
"搜索时忽略大小写
set smartcase
"打开英语单词的拼写检查
set spell spelllang=en_us
"出错时，发出视觉提示，通常是屏幕闪烁
"set visualbell
set paste

if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

